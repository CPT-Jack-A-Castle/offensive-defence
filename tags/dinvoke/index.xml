<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dinvoke on Offensive Defence</title>
    <link>https://offensivedefence.co.uk/tags/dinvoke/</link>
    <description>Recent content in dinvoke on Offensive Defence</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 02 Dec 2020 10:52:26 +0000</lastBuildDate>
    
	<atom:link href="https://offensivedefence.co.uk/tags/dinvoke/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>D/Invokify PPID Spoofy &amp; BlockDLLs</title>
      <link>https://offensivedefence.co.uk/posts/ppidspoof-blockdlls-dinvoke/</link>
      <pubDate>Wed, 02 Dec 2020 10:52:26 +0000</pubDate>
      
      <guid>https://offensivedefence.co.uk/posts/ppidspoof-blockdlls-dinvoke/</guid>
      <description>Intro The EXTENDED_STARTUPINFO_PRESENT process creation flag is used by the Windows CreateProcess, CreateProcessAsUser, CreateProcessWithLogonW and CreateProcessWithTokenW APIs. A common use case for attackers and malware is to specify a PROC_THREAD_ATTRIBUTE_PARENT_PROCESS attribute (for PPID spoofing) and a PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY attribute (for BlockDLLs).
This has long been achievable in both native code and managed code (via P/Invoke), but has been somewhat elusive when it comes to D/Invoke. D/Invoke has numerous advantages over P/Invoke (from a .</description>
    </item>
    
    <item>
      <title>Module Stomping in C#</title>
      <link>https://offensivedefence.co.uk/posts/module-stomping/</link>
      <pubDate>Fri, 20 Nov 2020 16:22:10 +0000</pubDate>
      
      <guid>https://offensivedefence.co.uk/posts/module-stomping/</guid>
      <description>A little while ago I published what I described as a &amp;ldquo;barely functional module stomping in C#&amp;rdquo; proof of concept. It had a couple of (pretty bad) issues - the shellcode would execute multiple times and then crash the host process.
Ceri took an interest in the code, so we worked together to make it stable and to co-author this blog post.
What is Module Stomping? Module Stomping (which also seems to go by the names Module Overloading and DLL Hollowing), is a shellcode injection technique that works thusly:</description>
    </item>
    
  </channel>
</rss>